proc sql;
    /* Month 1 summary */
    create table month1_summary as
    select
        "Month1" as month label="Month",
        count(distinct m1.member_id) as total_members,
        sum(case when m1.gapstatus = 'open' then 1 else 0 end) as open_count,
        sum(case when m1.gapstatus = 'closed' then 1 else 0 end) as closed_count
    from month1 m1
    inner join common_members cm on m1.member_id = cm.member_id;

    /* Month 2 summary */
    create table month2_summary as
    select
        "Month2" as month,
        count(distinct m2.member_id) as total_members,
        sum(case when m2.gapstatus = 'open' then 1 else 0 end) as open_count,
        sum(case when m2.gapstatus = 'closed' then 1 else 0 end) as closed_count
    from month2 m2
    inner join common_members cm on m2.member_id = cm.member_id;

    /* Month 3 summary */
    create table month3_summary as
    select
        "Month3" as month,
        count(distinct m3.member_id) as total_members,
        sum(case when m3.gapstatus = 'open' then 1 else 0 end) as open_count,
        sum(case when m3.gapstatus = 'closed' then 1 else 0 end) as closed_count
    from month3 m3
    inner join common_members cm on m3.member_id = cm.member_id;

    /* Month 4 summary */
    create table month4_summary as
    select
        "Month4" as month,
        count(distinct m4.member_id) as total_members,
        sum(case when m4.gapstatus = 'open' then 1 else 0 end) as open_count,
        sum(case when m4.gapstatus = 'closed' then 1 else 0 end) as closed_count
    from month4 m4
    inner join common_members cm on m4.member_id = cm.member_id;

    /* Combine all 4 summaries */
    create table final_gap_summary as
    select * from month1_summary
    union all
    select * from month2_summary
    union all
    select * from month3_summary
    union all
    select * from month4_summary;
quit;








proc sql;
    /* Step 1: Create a combined table */
    create table combined_gaps as
    select cm.member_id, m1.gapname,
           m1.gapstatus as status1,
           m2.gapstatus as status2,
           m3.gapstatus as status3,
           m4.gapstatus as status4
    from common_members cm
    inner join month1 m1 on cm.member_id = m1.member_id
    inner join month2 m2 on cm.member_id = m2.member_id and m1.gapname = m2.gapname
    inner join month3 m3 on cm.member_id = m3.member_id and m1.gapname = m3.gapname
    inner join month4 m4 on cm.member_id = m4.member_id and m1.gapname = m4.gapname;

    /* Step 2: Count open and closed members across all 4 months */
    create table gap_status_summary as
    select 
        gapname,
        sum(case when status1 = 'open' and status2 = 'open' and status3 = 'open' and status4 = 'open' then 1 else 0 end) as open_all_4,
        sum(case when status1 = 'closed' and status2 = 'closed' and status3 = 'closed' and status4 = 'closed' then 1 else 0 end) as closed_all_4
    from combined_gaps
    group by gapname;
quit;
